// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.19.6
// source: connectivity.proto

package v0

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ConnectivitySdkData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlatformSpecificData *PlatformSpecificData `protobuf:"bytes,1,opt,name=platform_specific_data,json=platformSpecificData,proto3" json:"platform_specific_data,omitempty"`
	DeviceId             string                `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
}

func (x *ConnectivitySdkData) Reset() {
	*x = ConnectivitySdkData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connectivity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectivitySdkData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectivitySdkData) ProtoMessage() {}

func (x *ConnectivitySdkData) ProtoReflect() protoreflect.Message {
	mi := &file_connectivity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectivitySdkData.ProtoReflect.Descriptor instead.
func (*ConnectivitySdkData) Descriptor() ([]byte, []int) {
	return file_connectivity_proto_rawDescGZIP(), []int{0}
}

func (x *ConnectivitySdkData) GetPlatformSpecificData() *PlatformSpecificData {
	if x != nil {
		return x.PlatformSpecificData
	}
	return nil
}

func (x *ConnectivitySdkData) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

type PlatformSpecificData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*PlatformSpecificData_Android
	//	*PlatformSpecificData_Ios
	//	*PlatformSpecificData_DesktopMacos
	//	*PlatformSpecificData_DesktopWindows
	//	*PlatformSpecificData_DesktopLinux
	Data isPlatformSpecificData_Data `protobuf_oneof:"data"`
}

func (x *PlatformSpecificData) Reset() {
	*x = PlatformSpecificData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connectivity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlatformSpecificData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlatformSpecificData) ProtoMessage() {}

func (x *PlatformSpecificData) ProtoReflect() protoreflect.Message {
	mi := &file_connectivity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlatformSpecificData.ProtoReflect.Descriptor instead.
func (*PlatformSpecificData) Descriptor() ([]byte, []int) {
	return file_connectivity_proto_rawDescGZIP(), []int{1}
}

func (m *PlatformSpecificData) GetData() isPlatformSpecificData_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *PlatformSpecificData) GetAndroid() *NativeAndroidData {
	if x, ok := x.GetData().(*PlatformSpecificData_Android); ok {
		return x.Android
	}
	return nil
}

func (x *PlatformSpecificData) GetIos() *NativeIOSData {
	if x, ok := x.GetData().(*PlatformSpecificData_Ios); ok {
		return x.Ios
	}
	return nil
}

func (x *PlatformSpecificData) GetDesktopMacos() *NativeDesktopMacOSData {
	if x, ok := x.GetData().(*PlatformSpecificData_DesktopMacos); ok {
		return x.DesktopMacos
	}
	return nil
}

func (x *PlatformSpecificData) GetDesktopWindows() *NativeDesktopWindowsData {
	if x, ok := x.GetData().(*PlatformSpecificData_DesktopWindows); ok {
		return x.DesktopWindows
	}
	return nil
}

func (x *PlatformSpecificData) GetDesktopLinux() *NativeDesktopLinuxData {
	if x, ok := x.GetData().(*PlatformSpecificData_DesktopLinux); ok {
		return x.DesktopLinux
	}
	return nil
}

type isPlatformSpecificData_Data interface {
	isPlatformSpecificData_Data()
}

type PlatformSpecificData_Android struct {
	Android *NativeAndroidData `protobuf:"bytes,1,opt,name=android,proto3,oneof"`
}

type PlatformSpecificData_Ios struct {
	Ios *NativeIOSData `protobuf:"bytes,2,opt,name=ios,proto3,oneof"`
}

type PlatformSpecificData_DesktopMacos struct {
	DesktopMacos *NativeDesktopMacOSData `protobuf:"bytes,3,opt,name=desktop_macos,json=desktopMacos,proto3,oneof"`
}

type PlatformSpecificData_DesktopWindows struct {
	DesktopWindows *NativeDesktopWindowsData `protobuf:"bytes,4,opt,name=desktop_windows,json=desktopWindows,proto3,oneof"`
}

type PlatformSpecificData_DesktopLinux struct {
	DesktopLinux *NativeDesktopLinuxData `protobuf:"bytes,5,opt,name=desktop_linux,json=desktopLinux,proto3,oneof"`
}

func (*PlatformSpecificData_Android) isPlatformSpecificData_Data() {}

func (*PlatformSpecificData_Ios) isPlatformSpecificData_Data() {}

func (*PlatformSpecificData_DesktopMacos) isPlatformSpecificData_Data() {}

func (*PlatformSpecificData_DesktopWindows) isPlatformSpecificData_Data() {}

func (*PlatformSpecificData_DesktopLinux) isPlatformSpecificData_Data() {}

type NativeAndroidData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScreenDimensions *Screen `protobuf:"bytes,1,opt,name=screen_dimensions,json=screenDimensions,proto3" json:"screen_dimensions,omitempty"`
	AndroidVersion   string  `protobuf:"bytes,2,opt,name=android_version,json=androidVersion,proto3" json:"android_version,omitempty"`
	ApiVersion       int32   `protobuf:"varint,3,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	DeviceName       string  `protobuf:"bytes,4,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	ModelStr         string  `protobuf:"bytes,5,opt,name=model_str,json=modelStr,proto3" json:"model_str,omitempty"`
	Vendor           string  `protobuf:"bytes,6,opt,name=vendor,proto3" json:"vendor,omitempty"`
	Vendor_2         string  `protobuf:"bytes,7,opt,name=vendor_2,json=vendor2,proto3" json:"vendor_2,omitempty"`
	UnknownValue_8   int32   `protobuf:"varint,8,opt,name=unknown_value_8,json=unknownValue8,proto3" json:"unknown_value_8,omitempty"`
}

func (x *NativeAndroidData) Reset() {
	*x = NativeAndroidData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connectivity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeAndroidData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeAndroidData) ProtoMessage() {}

func (x *NativeAndroidData) ProtoReflect() protoreflect.Message {
	mi := &file_connectivity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeAndroidData.ProtoReflect.Descriptor instead.
func (*NativeAndroidData) Descriptor() ([]byte, []int) {
	return file_connectivity_proto_rawDescGZIP(), []int{2}
}

func (x *NativeAndroidData) GetScreenDimensions() *Screen {
	if x != nil {
		return x.ScreenDimensions
	}
	return nil
}

func (x *NativeAndroidData) GetAndroidVersion() string {
	if x != nil {
		return x.AndroidVersion
	}
	return ""
}

func (x *NativeAndroidData) GetApiVersion() int32 {
	if x != nil {
		return x.ApiVersion
	}
	return 0
}

func (x *NativeAndroidData) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *NativeAndroidData) GetModelStr() string {
	if x != nil {
		return x.ModelStr
	}
	return ""
}

func (x *NativeAndroidData) GetVendor() string {
	if x != nil {
		return x.Vendor
	}
	return ""
}

func (x *NativeAndroidData) GetVendor_2() string {
	if x != nil {
		return x.Vendor_2
	}
	return ""
}

func (x *NativeAndroidData) GetUnknownValue_8() int32 {
	if x != nil {
		return x.UnknownValue_8
	}
	return 0
}

type NativeIOSData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// https://developer.apple.com/documentation/uikit/uiuserinterfaceidiom
	UserInterfaceIdiom       int32  `protobuf:"varint,1,opt,name=user_interface_idiom,json=userInterfaceIdiom,proto3" json:"user_interface_idiom,omitempty"`
	TargetIphoneSimulator    bool   `protobuf:"varint,2,opt,name=target_iphone_simulator,json=targetIphoneSimulator,proto3" json:"target_iphone_simulator,omitempty"`
	HwMachine                string `protobuf:"bytes,3,opt,name=hw_machine,json=hwMachine,proto3" json:"hw_machine,omitempty"`
	SystemVersion            string `protobuf:"bytes,4,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	SimulatorModelIdentifier string `protobuf:"bytes,5,opt,name=simulator_model_identifier,json=simulatorModelIdentifier,proto3" json:"simulator_model_identifier,omitempty"`
}

func (x *NativeIOSData) Reset() {
	*x = NativeIOSData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connectivity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeIOSData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeIOSData) ProtoMessage() {}

func (x *NativeIOSData) ProtoReflect() protoreflect.Message {
	mi := &file_connectivity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeIOSData.ProtoReflect.Descriptor instead.
func (*NativeIOSData) Descriptor() ([]byte, []int) {
	return file_connectivity_proto_rawDescGZIP(), []int{3}
}

func (x *NativeIOSData) GetUserInterfaceIdiom() int32 {
	if x != nil {
		return x.UserInterfaceIdiom
	}
	return 0
}

func (x *NativeIOSData) GetTargetIphoneSimulator() bool {
	if x != nil {
		return x.TargetIphoneSimulator
	}
	return false
}

func (x *NativeIOSData) GetHwMachine() string {
	if x != nil {
		return x.HwMachine
	}
	return ""
}

func (x *NativeIOSData) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *NativeIOSData) GetSimulatorModelIdentifier() string {
	if x != nil {
		return x.SimulatorModelIdentifier
	}
	return ""
}

type NativeDesktopWindowsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OsVersion int32 `protobuf:"varint,1,opt,name=os_version,json=osVersion,proto3" json:"os_version,omitempty"`
	OsBuild   int32 `protobuf:"varint,3,opt,name=os_build,json=osBuild,proto3" json:"os_build,omitempty"`
	// https://docs.microsoft.com/en-us/dotnet/api/system.platformid?view=net-6.0
	PlatformId     int32 `protobuf:"varint,4,opt,name=platform_id,json=platformId,proto3" json:"platform_id,omitempty"`
	UnknownValue_5 int32 `protobuf:"varint,5,opt,name=unknown_value_5,json=unknownValue5,proto3" json:"unknown_value_5,omitempty"`
	UnknownValue_6 int32 `protobuf:"varint,6,opt,name=unknown_value_6,json=unknownValue6,proto3" json:"unknown_value_6,omitempty"`
	// https://docs.microsoft.com/en-us/dotnet/api/system.reflection.imagefilemachine?view=net-6.0
	ImageFileMachine int32 `protobuf:"varint,7,opt,name=image_file_machine,json=imageFileMachine,proto3" json:"image_file_machine,omitempty"`
	// https://docs.microsoft.com/en-us/dotnet/api/system.reflection.portableexecutable.machine?view=net-6.0
	PeMachine       int32 `protobuf:"varint,8,opt,name=pe_machine,json=peMachine,proto3" json:"pe_machine,omitempty"`
	UnknownValue_10 bool  `protobuf:"varint,10,opt,name=unknown_value_10,json=unknownValue10,proto3" json:"unknown_value_10,omitempty"`
}

func (x *NativeDesktopWindowsData) Reset() {
	*x = NativeDesktopWindowsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connectivity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeDesktopWindowsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeDesktopWindowsData) ProtoMessage() {}

func (x *NativeDesktopWindowsData) ProtoReflect() protoreflect.Message {
	mi := &file_connectivity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeDesktopWindowsData.ProtoReflect.Descriptor instead.
func (*NativeDesktopWindowsData) Descriptor() ([]byte, []int) {
	return file_connectivity_proto_rawDescGZIP(), []int{4}
}

func (x *NativeDesktopWindowsData) GetOsVersion() int32 {
	if x != nil {
		return x.OsVersion
	}
	return 0
}

func (x *NativeDesktopWindowsData) GetOsBuild() int32 {
	if x != nil {
		return x.OsBuild
	}
	return 0
}

func (x *NativeDesktopWindowsData) GetPlatformId() int32 {
	if x != nil {
		return x.PlatformId
	}
	return 0
}

func (x *NativeDesktopWindowsData) GetUnknownValue_5() int32 {
	if x != nil {
		return x.UnknownValue_5
	}
	return 0
}

func (x *NativeDesktopWindowsData) GetUnknownValue_6() int32 {
	if x != nil {
		return x.UnknownValue_6
	}
	return 0
}

func (x *NativeDesktopWindowsData) GetImageFileMachine() int32 {
	if x != nil {
		return x.ImageFileMachine
	}
	return 0
}

func (x *NativeDesktopWindowsData) GetPeMachine() int32 {
	if x != nil {
		return x.PeMachine
	}
	return 0
}

func (x *NativeDesktopWindowsData) GetUnknownValue_10() bool {
	if x != nil {
		return x.UnknownValue_10
	}
	return false
}

type NativeDesktopLinuxData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemName    string `protobuf:"bytes,1,opt,name=system_name,json=systemName,proto3" json:"system_name,omitempty"`          //  uname -s
	SystemRelease string `protobuf:"bytes,2,opt,name=system_release,json=systemRelease,proto3" json:"system_release,omitempty"` //  -r
	SystemVersion string `protobuf:"bytes,3,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"` //  -v
	Hardware      string `protobuf:"bytes,4,opt,name=hardware,proto3" json:"hardware,omitempty"`                                //  -i
}

func (x *NativeDesktopLinuxData) Reset() {
	*x = NativeDesktopLinuxData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connectivity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeDesktopLinuxData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeDesktopLinuxData) ProtoMessage() {}

func (x *NativeDesktopLinuxData) ProtoReflect() protoreflect.Message {
	mi := &file_connectivity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeDesktopLinuxData.ProtoReflect.Descriptor instead.
func (*NativeDesktopLinuxData) Descriptor() ([]byte, []int) {
	return file_connectivity_proto_rawDescGZIP(), []int{5}
}

func (x *NativeDesktopLinuxData) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *NativeDesktopLinuxData) GetSystemRelease() string {
	if x != nil {
		return x.SystemRelease
	}
	return ""
}

func (x *NativeDesktopLinuxData) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *NativeDesktopLinuxData) GetHardware() string {
	if x != nil {
		return x.Hardware
	}
	return ""
}

type NativeDesktopMacOSData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemVersion   string `protobuf:"bytes,1,opt,name=system_version,json=systemVersion,proto3" json:"system_version,omitempty"`
	HwModel         string `protobuf:"bytes,2,opt,name=hw_model,json=hwModel,proto3" json:"hw_model,omitempty"`
	CompiledCpuType string `protobuf:"bytes,3,opt,name=compiled_cpu_type,json=compiledCpuType,proto3" json:"compiled_cpu_type,omitempty"`
}

func (x *NativeDesktopMacOSData) Reset() {
	*x = NativeDesktopMacOSData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connectivity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NativeDesktopMacOSData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NativeDesktopMacOSData) ProtoMessage() {}

func (x *NativeDesktopMacOSData) ProtoReflect() protoreflect.Message {
	mi := &file_connectivity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NativeDesktopMacOSData.ProtoReflect.Descriptor instead.
func (*NativeDesktopMacOSData) Descriptor() ([]byte, []int) {
	return file_connectivity_proto_rawDescGZIP(), []int{6}
}

func (x *NativeDesktopMacOSData) GetSystemVersion() string {
	if x != nil {
		return x.SystemVersion
	}
	return ""
}

func (x *NativeDesktopMacOSData) GetHwModel() string {
	if x != nil {
		return x.HwModel
	}
	return ""
}

func (x *NativeDesktopMacOSData) GetCompiledCpuType() string {
	if x != nil {
		return x.CompiledCpuType
	}
	return ""
}

type Screen struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width          int32 `protobuf:"varint,1,opt,name=width,proto3" json:"width,omitempty"`
	Height         int32 `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Density        int32 `protobuf:"varint,3,opt,name=density,proto3" json:"density,omitempty"`
	UnknownValue_4 int32 `protobuf:"varint,4,opt,name=unknown_value_4,json=unknownValue4,proto3" json:"unknown_value_4,omitempty"`
	UnknownValue_5 int32 `protobuf:"varint,5,opt,name=unknown_value_5,json=unknownValue5,proto3" json:"unknown_value_5,omitempty"`
}

func (x *Screen) Reset() {
	*x = Screen{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connectivity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Screen) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Screen) ProtoMessage() {}

func (x *Screen) ProtoReflect() protoreflect.Message {
	mi := &file_connectivity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Screen.ProtoReflect.Descriptor instead.
func (*Screen) Descriptor() ([]byte, []int) {
	return file_connectivity_proto_rawDescGZIP(), []int{7}
}

func (x *Screen) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Screen) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Screen) GetDensity() int32 {
	if x != nil {
		return x.Density
	}
	return 0
}

func (x *Screen) GetUnknownValue_4() int32 {
	if x != nil {
		return x.UnknownValue_4
	}
	return 0
}

func (x *Screen) GetUnknownValue_5() int32 {
	if x != nil {
		return x.UnknownValue_5
	}
	return 0
}

var File_connectivity_proto protoreflect.FileDescriptor

var file_connectivity_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76,
	0x30, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x53, 0x64, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x67, 0x0a, 0x16, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x73, 0x70, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d,
	0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x70, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22,
	0xc4, 0x03, 0x0a, 0x14, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x53, 0x70, 0x65, 0x63,
	0x69, 0x66, 0x69, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x07, 0x61, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x73, 0x70, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x41, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x07, 0x61, 0x6e, 0x64,
	0x72, 0x6f, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x03, 0x69, 0x6f, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x30, 0x2e,
	0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x4f, 0x53, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52,
	0x03, 0x69, 0x6f, 0x73, 0x12, 0x5a, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5f,
	0x6d, 0x61, 0x63, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x70,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x63, 0x4f, 0x53, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x63, 0x6f, 0x73,
	0x12, 0x60, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5f, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x73, 0x70, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65,
	0x73, 0x6b, 0x74, 0x6f, 0x70, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x0e, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x73, 0x12, 0x5a, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x5f, 0x6c, 0x69,
	0x6e, 0x75, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x73, 0x70, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65,
	0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00,
	0x52, 0x0c, 0x64, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x42, 0x06,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xc8, 0x02, 0x0a, 0x11, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x11,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x2e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x52, 0x10, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27,
	0x0a, 0x0f, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x70,
	0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x5f, 0x73, 0x74, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x53, 0x74, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x5f, 0x32, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x32, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x38, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x38, 0x22, 0xfd, 0x01, 0x0a, 0x0d, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x4f, 0x53, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x66, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x69, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x12, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x66, 0x61, 0x63, 0x65,
	0x49, 0x64, 0x69, 0x6f, 0x6d, 0x12, 0x36, 0x0a, 0x17, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f,
	0x69, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x53, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x68, 0x77, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x68, 0x77, 0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x1a, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x73, 0x69, 0x6d, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x22, 0xbc, 0x02, 0x0a, 0x18, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x6b,
	0x74, 0x6f, 0x70, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x6f, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x73, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6f, 0x73, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x35, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x35, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x5f, 0x36, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x36, 0x12, 0x2c, 0x0a, 0x12, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x4d, 0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x65, 0x5f, 0x6d, 0x61,
	0x63, 0x68, 0x69, 0x6e, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x65, 0x4d,
	0x61, 0x63, 0x68, 0x69, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77,
	0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x31, 0x30, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x31, 0x30,
	0x22, 0xa3, 0x01, 0x0a, 0x16, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x44, 0x65, 0x73, 0x6b, 0x74,
	0x6f, 0x70, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x6c, 0x65,
	0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61,
	0x72, 0x64, 0x77, 0x61, 0x72, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x16, 0x4e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x44, 0x65, 0x73, 0x6b, 0x74, 0x6f, 0x70, 0x4d, 0x61, 0x63, 0x4f, 0x53, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x77, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x77, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x5f,
	0x63, 0x70, 0x75, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x63, 0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x64, 0x43, 0x70, 0x75, 0x54, 0x79, 0x70, 0x65, 0x22,
	0xa0, 0x01, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x34, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x34, 0x12, 0x26, 0x0a, 0x0f, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x35, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x35, 0x42, 0x45, 0x5a, 0x43, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x64, 0x65, 0x76, 0x67, 0x69, 0x61, 0x6e, 0x6c, 0x75, 0x2f, 0x67, 0x6f, 0x2d, 0x6c, 0x69,
	0x62, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x70,
	0x6f, 0x74, 0x69, 0x66, 0x79, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x2f, 0x64, 0x61, 0x74, 0x61, 0x2f, 0x76, 0x30, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_connectivity_proto_rawDescOnce sync.Once
	file_connectivity_proto_rawDescData = file_connectivity_proto_rawDesc
)

func file_connectivity_proto_rawDescGZIP() []byte {
	file_connectivity_proto_rawDescOnce.Do(func() {
		file_connectivity_proto_rawDescData = protoimpl.X.CompressGZIP(file_connectivity_proto_rawDescData)
	})
	return file_connectivity_proto_rawDescData
}

var file_connectivity_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_connectivity_proto_goTypes = []interface{}{
	(*ConnectivitySdkData)(nil),      // 0: spotify.clienttoken.data.v0.ConnectivitySdkData
	(*PlatformSpecificData)(nil),     // 1: spotify.clienttoken.data.v0.PlatformSpecificData
	(*NativeAndroidData)(nil),        // 2: spotify.clienttoken.data.v0.NativeAndroidData
	(*NativeIOSData)(nil),            // 3: spotify.clienttoken.data.v0.NativeIOSData
	(*NativeDesktopWindowsData)(nil), // 4: spotify.clienttoken.data.v0.NativeDesktopWindowsData
	(*NativeDesktopLinuxData)(nil),   // 5: spotify.clienttoken.data.v0.NativeDesktopLinuxData
	(*NativeDesktopMacOSData)(nil),   // 6: spotify.clienttoken.data.v0.NativeDesktopMacOSData
	(*Screen)(nil),                   // 7: spotify.clienttoken.data.v0.Screen
}
var file_connectivity_proto_depIdxs = []int32{
	1, // 0: spotify.clienttoken.data.v0.ConnectivitySdkData.platform_specific_data:type_name -> spotify.clienttoken.data.v0.PlatformSpecificData
	2, // 1: spotify.clienttoken.data.v0.PlatformSpecificData.android:type_name -> spotify.clienttoken.data.v0.NativeAndroidData
	3, // 2: spotify.clienttoken.data.v0.PlatformSpecificData.ios:type_name -> spotify.clienttoken.data.v0.NativeIOSData
	6, // 3: spotify.clienttoken.data.v0.PlatformSpecificData.desktop_macos:type_name -> spotify.clienttoken.data.v0.NativeDesktopMacOSData
	4, // 4: spotify.clienttoken.data.v0.PlatformSpecificData.desktop_windows:type_name -> spotify.clienttoken.data.v0.NativeDesktopWindowsData
	5, // 5: spotify.clienttoken.data.v0.PlatformSpecificData.desktop_linux:type_name -> spotify.clienttoken.data.v0.NativeDesktopLinuxData
	7, // 6: spotify.clienttoken.data.v0.NativeAndroidData.screen_dimensions:type_name -> spotify.clienttoken.data.v0.Screen
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_connectivity_proto_init() }
func file_connectivity_proto_init() {
	if File_connectivity_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_connectivity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectivitySdkData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connectivity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlatformSpecificData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connectivity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeAndroidData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connectivity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeIOSData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connectivity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeDesktopWindowsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connectivity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeDesktopLinuxData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connectivity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NativeDesktopMacOSData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connectivity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Screen); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_connectivity_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*PlatformSpecificData_Android)(nil),
		(*PlatformSpecificData_Ios)(nil),
		(*PlatformSpecificData_DesktopMacos)(nil),
		(*PlatformSpecificData_DesktopWindows)(nil),
		(*PlatformSpecificData_DesktopLinux)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_connectivity_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_connectivity_proto_goTypes,
		DependencyIndexes: file_connectivity_proto_depIdxs,
		MessageInfos:      file_connectivity_proto_msgTypes,
	}.Build()
	File_connectivity_proto = out.File
	file_connectivity_proto_rawDesc = nil
	file_connectivity_proto_goTypes = nil
	file_connectivity_proto_depIdxs = nil
}
